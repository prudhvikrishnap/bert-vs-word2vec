# -*- coding: utf-8 -*-
"""BERT_EM6262_Final_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DY5jd8GqXjCH2Wh-QVXYEHpf5AddzJJK
"""

import pandas as pd

df = pd.read_csv("nyt.csv")
df.head(5)

df.shape

df1 = df.dropna()

df1.shape

df1['document_type']=df1['document_type'].replace(['article'],1)
df1['document_type']=df1['document_type'].replace(['audio'],2)
df1['document_type']=df1['document_type'].replace(['multimedia'],3)
df1['document_type']=df1['document_type'].replace(['audiocontainer'],4)
df1['document_type']=df1['document_type'].replace(['News'],5)

df1.tail(5)

df1['document_type'].dtypes

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(df1['abstract'],df1['document_type'], stratify=df1['document_type'])

import tensorflow_hub as hub
import tensorflow_text as text

bert_preprocess = hub.KerasLayer("https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3")
bert_encoder = hub.KerasLayer("https://tfhub.dev/tensorflow/bert_en_uncased_L-12_H-768_A-12/4")

import tensorflow as tf

text_input = tf.keras.layers.Input(shape=(), dtype=tf.string, name='text')
preprocessed_text = bert_preprocess(text_input)
outputs = bert_encoder(preprocessed_text)

l = tf.keras.layers.Dropout(0.1, name="dropout")(outputs['pooled_output'])
l = tf.keras.layers.Dense(1, activation='sigmoid', name="output")(l)

model = tf.keras.Model(inputs=[text_input], outputs = [l])

model.summary()

METRICS = [
      tf.keras.metrics.BinaryAccuracy(name='accuracy'),
      tf.keras.metrics.Precision(name='precision'),
      tf.keras.metrics.Recall(name='recall')
]

model.compile(optimizer='adam',
 loss='binary_crossentropy',
 metrics=METRICS)

model.fit(X_train, y_train, epochs=15)

y_predicted = model.predict(X_test)
y_predicted = y_predicted.flatten()

y_predicted = np.where(y_predicted > 0.5, 1, 0)
y_predicted

sample_dataset = ['Why would you want to do that? There are a lot of uses for sentiment analysis, such as understanding how stock traders feel about a particular company by using social media']

model.predict(sample_dataset)

